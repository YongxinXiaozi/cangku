百度地图的使用
配置
地图的展示，地图状态的监听
定位，定位的监听
添加覆盖物(Marker),设置Marker监听
InfoWindow 图标
地理编码(地址-->经纬度)和反地理编码(经纬度-->地址)


MVP模式来进行架构搭建

Model  数据模型，网络请求充当
View    视图
Presenter   业务类


1. 如何实现业务分离
2. Mosby 库的使用
    1. 依赖
    2. Activity/Fragment   MvpActivity<LoginView,LoginPresenter> implements LoginView
        Presenter LoginPresenter extends MvpNullObjectBasePresenter<LoginView>
        View接口  LoginView extends MvpView
3. 登录、注册


1. 创建一个baidumap 模块 app 依赖于他
2. baidumap libs 添加jar包 build.gradle 里面去指定so路径
3. app 模块下面固定的debug.keystore build.gradle 去指定
    拿到SHA1值 + 包名---------key
    清单文件中
    定位，加一个定位的Service组件
4. 页面搭建
    1.初始化百度地图，动态添加MapView，展示出来地图，监听了地图的状态变化
    2.定位，地图移动到定位处，设置定位监听
    3.地图的缩放+ — 按钮的点击事件，进行地图缩放
    4.定位，卫星，指南针相应的功能
5. 视图的不同模式
    普通视图模式
    宝藏选中视图模式
    埋藏宝藏视图模式


宝藏数据获取及展示
1. MVP进行数据获取 Mosby库
2. 根据位置所在的一个区域来获取数据，当地图状态发生改变的时候，位置变化了，地图状态监听位置变化
    根据经纬度来
3. 获取到数据后，去添加Marker，完成宝藏展示
4. Marker（宝藏）设置点击事件，展示宝藏选中视图模式
    1. InfoWindow
    2. 宝藏信息卡片--自定义视图，提供了一个方法，主要就是完成根据宝藏信息完成信息卡片的数据填充
5. 宝藏信息卡片设置点击事件，跳转到宝藏详情页面
    在宝藏详情页面，提供一个open方法，传入不同的数据，给别人跳转时使用

6. 宝藏详情页面
    1.需要传入的数据Treasure
    2.展示了地图--不可移动，不可缩放。。。
    3.展示toolbar标题以及返回功能
    4.传入的数据展示到宝藏信息卡片上
    5.MVP 进行数据（宝物详情）请求
    6.导航功能
        1.步行导航
        2.骑行导航
        3.网页导航
        4.显示弹窗去下载百度地图app

7. 埋藏宝藏视图模式
    1. 视图实现，切换宝藏埋藏模式下
        地理编码 反地理编码（经纬度-->地址信息）展示到标题录入卡片的位置上的
    2. 卡片标题处理
    3. 卡片点击事件

8. 宝藏埋藏详细页面
    1. 标题录入卡片---> 宝藏埋藏详细页面
        经纬度、地址信息、海拔。。。。信息传递过去
        提供了一个方法open(需要传入的参数)
    2. MVP 模式来进行数据上传
        视图与业务之间的交互









